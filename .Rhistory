# select the columns in your data that contain date elements
date_cols_main <- c("start","end", tool.survey %>% filter(type == "date" & datasheet == "main") %>% pull(name),
"submission_time") # add them here
# transform them into the datetime format
raw.main <- raw.main %>%
mutate_at(date_cols_main, ~ifelse(!str_detect(., '-'), as.character(convertToDateTime(as.numeric(.))), .))
rm(date_cols_main)
# get all of the other questions
other.db <- utilityR::get.other.db(tool.choices = tool.choices,
tool.survey = tool.survey,
label_colname = label_colname)
View(other.db)
# Separate the other questions files by loop
other.db.main  <- other.db[other.db$name %in% colnames(raw.main),]
# find _other responses in main
other.responses <- utilityR::find.responses(raw.main, other.db.main)
# same process for loops
if(length(sheet_names_new)>0){
for(loop in 1:length(sheet_names_new)){
txt <- paste0('other.db.loop',loop,'<- other.db[other.db$name %in% colnames(raw.loop',loop,'),]')
eval(parse(text=txt))
txt <- paste0(
'if(nrow(other.db.loop',loop,')>0){
other.responses.loop',loop,' <- utilityR::find.responses(raw.loop',loop,', other.db.loop',loop,', is.loop = T)
}else{other.responses.loop',loop,' <- data.frame()}'
)
eval(parse(text=txt))
txt <- paste0('other.responses <- rbind(other.responses, other.responses.loop',loop,')')
eval(parse(text=txt))
}
}
View(other.responses)
# name that hosts the clean recode.others file, leave as '' if you don't have this file. Nothing will be recoded that way
name_clean_others_file <- 'UKR2308_MSNA_other_response_230802'
sheet_name_others <- 'Sheet2' # name of the sheet where you're holding your requests
or.edited  <- utilityR::load.requests(directory_dictionary$dir.requests,
name_clean_others_file,
sheet = sheet_name_others, validate = T)
View(or.edited)
or.edited2 <- or.edited %>% left_join(other.responses)
setdiff(names(or.edited2),names(or.edited))
or.edited2 <- or.edited %>% left_join(other.responses %>% select(-responses,-choices))
setdiff(names(or.edited2),names(or.edited))
or.edited <- or.edited %>% left_join(other.responses %>% select(-responses,-choices))
View(other.responses)
or.edited  <- utilityR::load.requests(directory_dictionary$dir.requests,
name_clean_others_file,
sheet = sheet_name_others, validate = T)  # specify Sheet2 because the first one is a readme
or.edited2 <- or.edited %>% left_join(other.responses %>% select(uuid,loop_index,ref.name,name,choice,responses) %>% rename(response.uk = responses))
View(or.edited2)
or.edited <- or.edited %>% left_join(other.responses %>% select(uuid,loop_index,ref.name,name,choice,responses) %>% rename(response.uk = responses))
or.edited %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((ref.name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, ref.name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", ref.name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited
or.edited %>%
left_join(tool.survey %>% select(name,list_name))
tool.survey %>% select(name,list_name)
tool.survey %>% select(name,list_name) %>% tibble()
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v))
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v))
stringr::str_split(or.edited$choice, " ")
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v)) %>%
filter(!is.na(choice)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v)) %>%
filter(!is.na(choice)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
}))
or.edited %>%
left_join(tool.survey %>% select(name,list_name)) %>%
filter(!is.na(existing.v)) %>%
filter(!is.na(choice)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
}))
rlang::last_trace()
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name))
View(or.edited2)
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(ref.name,list_name) %>% rename(name=ref.name))
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name))
View(or.edited2)
or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
filter(!is.na(existing.v)) %>%
filter(!is.na(choice)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
filter(!is.na(existing.v)) %>%
filter(!is.na(choice)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
warnings()
View(tool.survey)
View(tool.choices)
'could_not_afford_cost_of_consultation_service'=='could_not_afford_cost_of_consultation_service'
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
filter(!is.na(choice)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
filter(!is.na(choice))
View(or.edited)
View(other.responses)
or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup()
View(or.edited2)
View(other.responses)
View(other.responses)
'41dc312c-cd35-4c61-8b50-db6c3f9b3e64' %in% raw.main$uuid
or.edited$uuid%in% raw.main$uuid %>% table
or.edited  <- utilityR::load.requests(directory_dictionary$dir.requests,
name_clean_others_file,
sheet = sheet_name_others, validate = T)  # specify Sheet2 because the first one is a readme
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name))
or.edited  <- utilityR::load.requests(directory_dictionary$dir.requests,
name_clean_others_file,
sheet = sheet_name_others, validate = T)  # specify Sheet2 because the first one is a readme
or.edited <- or.edited[or.edited$uuid%in% raw.main$uuid]
or.edited <- or.edited[is.na(or.edited$loop_index),]
or.edited$uuid%in% raw.main$uuid %>% table()
or.edited <- or.edited %>% left_join(other.responses %>% select(uuid,loop_index,ref.name,name,choice,responses) %>% rename(response.uk = responses))
or.edited2 <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
}))
other.responses$uuid %in% raw.main$uuid
other.responses$uuid %in% raw.main$uuid %>% table()
or.edited <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v)) %>%
dplyr::select(-existing.v.choice_label)
or.edited  <- utilityR::load.requests(directory_dictionary$dir.requests,
name_clean_others_file,
sheet = sheet_name_others, validate = T)  # specify Sheet2 because the first one is a readme
or.edited <- or.edited[is.na(or.edited$loop_index),]
or.edited<- or.edited[or.edited$uii,]
or.edited<- or.edited[or.edited$uiid %in% raw.main,]
or.edited<- or.edited[or.edited$uuid %in% raw.main$uuid,]
or.edited  <- utilityR::load.requests(directory_dictionary$dir.requests,
name_clean_others_file,
sheet = sheet_name_others, validate = T)  # specify Sheet2 because the first one is a readme
or.edited <- or.edited[is.na(or.edited$loop_index),]
or.edited[or.edited$uuid %in% raw.main$uuid,]
or.edited <- or.edited[or.edited$uuid %in% raw.main$uuid,]
or.edited <- or.edited %>% left_join(other.responses %>% select(uuid,loop_index,ref.name,name,choice,responses) %>% rename(response.uk = responses))
is.na(or.edited$choice)
is.na(or.edited$choice) %>% table()
or.edited <- or.edited %>%
left_join(tool.survey %>% select(name,list_name) %>% rename(ref.name=name)) %>%
dplyr::rowwise() %>%
dplyr::mutate(existing.v.choice_label = sapply(stringr::str_split(choice, " "), function(choice_list) {
if (is.na(existing.v)) {
return("NA")
}
existing.v.list <- unlist(strsplit(existing.v, ";"))
for (ch in choice_list) {
if ((list_name %in% tool.choices$list_name)) {
label <- utilityR::get.choice.label(ch, list_name,
directory_dictionary$label_colname, tool.choices)
if ((is.element(label, existing.v.list))) {
existing.v.list <- existing.v.list[!existing.v.list %in% label]
}
} else {
stop(paste0("The choice list ", list_name, " does not exist in the tool.choices file"))
}
}
return(paste(existing.v.list, collapse = ";"))
})) %>%
dplyr::ungroup() %>%
mutate(existing.v = ifelse(existing.v.choice_label == '', NA, existing.v.choice_label),
invalid.v = ifelse(existing.v.choice_label == '', 'YES', invalid.v))
warn <- nrow(or.edited[or.edited$existing.v.choice_label =='',])
or.edited <- or.edited%>%
dplyr::select(-existing.v.choice_label)
if(warn>0){
warning(paste0(warn,' of the entries in the existing column of the requests file were already
chosen by the respondent in the cumulative column. These `other` enries will be coded
as invalid to speed up the recoding process'))
}
if(warn>0){
warning(paste0(warn,' of the entries in the existing column of the requests file were already
chosen by the respondent in the cumulative column. These `other` enries will be coded
as invalid to speed up the recoding process'))
}
